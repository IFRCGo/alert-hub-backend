type Admin1Type {
  id: ID!
  countryId: ID!
  name: String!
  polygon: String
  multipolygon: String
  minLatitude: String
  maxLatitude: String
  minLongitude: String
  maxLongitude: String
  country: CountryType!
}

input AlertFilter {
  id: IDBaseFilterLookup
  AND: AlertFilter
  OR: AlertFilter
  NOT: AlertFilter
  DISTINCT: Boolean
}

type AlertInfoAreaCircleType {
  id: ID!
  alertInfoAreaId: ID!
  value: String!
}

type AlertInfoAreaGeocodeType {
  id: ID!
  alertInfoAreaId: ID!
  valueName: String!
  value: String!
}

type AlertInfoAreaPolygonType {
  id: ID!
  alertInfoAreaId: ID!
  value: String!
}

type AlertInfoAreaType {
  id: ID!
  alertInfoId: ID!
  areaDesc: String!
  altitude: String
  ceiling: String
  polygons: [AlertInfoAreaPolygonType!]!
  circles: [AlertInfoAreaCircleType!]!
  geocodes: [AlertInfoAreaGeocodeType!]!
}

enum AlertInfoCategoryEnum {
  GEO
  MET
  SAFETY
  SECURITY
  RESCUE
  FIRE
  HEALTH
  ENV
  TRANSPORT
  INFRA
  CBRNE
  OTHER
}

enum AlertInfoCertaintyEnum {
  OBSERVED
  LIKELY
  POSSIBLE
  UNLIKELY
  UNKNOWN
}

type AlertInfoParameterType {
  id: ID!
  alertInfoId: ID!
  valueName: String!
  value: String!
}

enum AlertInfoResponseTypeEnum {
  SHELTER
  EVACUATE
  PREPARE
  EXECUTE
  AVOID
  MONITOR
  ASSESS
  ALLCLEAR
  NONE
}

enum AlertInfoSeverityEnum {
  EXTREME
  SEVERE
  MODERATE
  MINOR
  UNKNOWN
}

type AlertInfoType {
  id: ID!
  alertId: ID!
  effective: DateTime!
  onset: DateTime
  expires: DateTime
  language: String
  event: String!
  audience: String
  eventCode: String
  senderName: String
  headline: String
  description: String
  instruction: String
  web: String
  contact: String
  parameter: String
  category: AlertInfoCategoryEnum!
  responseType: AlertInfoResponseTypeEnum
  urgency: AlertInfoUrgencyEnum!
  severity: AlertInfoSeverityEnum!
  certainty: AlertInfoCertaintyEnum!
  categoryDisplay: String!
  responseTypeDisplay: String
  urgencyDisplay: String!
  severityDisplay: String!
  certaintyDisplay: String!
  infos: [AlertInfoParameterType!]!
  areas: [AlertInfoAreaType!]!
}

enum AlertInfoUrgencyEnum {
  IMMEDIATE
  EXPECTED
  FUTURE
  PAST
  UNKNOWN
}

enum AlertMsgTypeEnum {
  ALERT
  UPDATE
  CANCEL
  ACK
  ERROR
}

input AlertOrder {
  id: Ordering
}

enum AlertStatusEnum {
  ACTUAL
  EXERCISE
  SYSTEM
  TEST
  DRAFT
}

type AlertType {
  id: ID!
  sent: DateTime!
  countryId: ID!
  feedId: ID!
  url: String!
  identifier: String!
  sender: String!
  source: String
  scope: String
  restriction: String
  addresses: String
  code: String
  note: String
  references: String
  incidents: String
  status: AlertStatusEnum!
  msgType: AlertMsgTypeEnum!
  statusDisplay: String!
  msgTypeDisplay: String!
  country: CountryType!
  feed: FeedType!
  admin1s: [Admin1Type!]!
  infos: [AlertInfoType!]!
}

type AlertTypeCountList {
  limit: Int!
  offset: Int!
  count: Int!
  items: [AlertType!]!
}

type AppEnumCollection {
  UserEmailOptOuts: [AppEnumCollectionUserEmailOptOuts!]!
  AlertStatus: [AppEnumCollectionAlertStatus!]!
  AlertMsgType: [AppEnumCollectionAlertMsgType!]!
  FeedFormat: [AppEnumCollectionFeedFormat!]!
  FeedPollingInterval: [AppEnumCollectionFeedPollingInterval!]!
  FeedStatus: [AppEnumCollectionFeedStatus!]!
  AlertInfoCategory: [AppEnumCollectionAlertInfoCategory!]!
  AlertInfoResponseType: [AppEnumCollectionAlertInfoResponseType!]!
  AlertInfoUrgency: [AppEnumCollectionAlertInfoUrgency!]!
  AlertInfoSeverity: [AppEnumCollectionAlertInfoSeverity!]!
  AlertInfoCertainty: [AppEnumCollectionAlertInfoCertainty!]!
}

type AppEnumCollectionAlertInfoCategory {
  key: AlertInfoCategoryEnum!
  label: String!
}

type AppEnumCollectionAlertInfoCertainty {
  key: AlertInfoCertaintyEnum!
  label: String!
}

type AppEnumCollectionAlertInfoResponseType {
  key: AlertInfoResponseTypeEnum!
  label: String!
}

type AppEnumCollectionAlertInfoSeverity {
  key: AlertInfoSeverityEnum!
  label: String!
}

type AppEnumCollectionAlertInfoUrgency {
  key: AlertInfoUrgencyEnum!
  label: String!
}

type AppEnumCollectionAlertMsgType {
  key: AlertMsgTypeEnum!
  label: String!
}

type AppEnumCollectionAlertStatus {
  key: AlertStatusEnum!
  label: String!
}

type AppEnumCollectionFeedFormat {
  key: FeedFormatEnum!
  label: String!
}

type AppEnumCollectionFeedPollingInterval {
  key: FeedPoolingIntervalEnum!
  label: String!
}

type AppEnumCollectionFeedStatus {
  key: FeedStatusEnum!
  label: String!
}

type AppEnumCollectionUserEmailOptOuts {
  key: OptEmailNotificationTypeEnum!
  label: String!
}

type ContinentType {
  id: ID!
  name: String!
}

input CountryFilter {
  id: IDBaseFilterLookup
  AND: CountryFilter
  OR: CountryFilter
  NOT: CountryFilter
  DISTINCT: Boolean
}

input CountryOrder {
  id: Ordering
}

type CountryType {
  id: ID!
  regionId: ID!
  continentId: ID!
  name: String!
  iso3: String!
  polygon: String
  multipolygon: String
  centroid: String
  region: RegionType!
  continent: ContinentType!
}

type CountryTypeCountList {
  limit: Int!
  offset: Int!
  count: Int!
  items: [CountryType!]!
}

"""Date with time (isoformat)"""
scalar DateTime

input FeedFilter {
  id: IDBaseFilterLookup
  AND: FeedFilter
  OR: FeedFilter
  NOT: FeedFilter
  DISTINCT: Boolean
}

enum FeedFormatEnum {
  ATOM
  RSS
  NWS_US
}

input FeedOrder {
  id: Ordering
}

enum FeedPoolingIntervalEnum {
  I_05
  I_10
  I_15
  I_20
  I_25
  I_30
  I_35
  I_40
  I_45
  I_50
  I_55
  I_60
}

enum FeedStatusEnum {
  ACTIVE
  TESTING
  INACTIVE
  UNUSABLE
}

type FeedType {
  id: ID!
  enablePolling: Boolean!
  enableRebroadcast: Boolean!
  official: Boolean!
  countryId: ID!
  url: String!
  authorName: String!
  authorEmail: String!
  notes: String
  format: FeedFormatEnum!
  pollingInterval: FeedPoolingIntervalEnum!
  status: String!
  formatDisplay: String!
  pollingIntervalDisplay: FeedPoolingIntervalEnum!
  statusDisplay: String!
  country: CountryType!
  languages: [LanguageInfoType!]!
}

type FeedTypeCountList {
  limit: Int!
  offset: Int!
  count: Int!
  items: [FeedType!]!
}

input IDBaseFilterLookup {
  """Exact match. Filter will be skipped on `null` value"""
  exact: ID

  """Assignment test. Filter will be skipped on `null` value"""
  isNull: Boolean

  """
  Exact match of items in a given list. Filter will be skipped on `null` value
  """
  inList: [ID!]
}

type LanguageInfoType {
  id: ID!
  feedId: ID!
  name: String!
  logo: String
  language: String
}

type Mutation {
  public: PublicMutation!
  private: PrivateMutation!
}

input OffsetPaginationInput {
  offset: Int! = 0
  limit: Int! = -1
}

enum OptEmailNotificationTypeEnum {
  NEWS_AND_OFFERS
}

enum Ordering {
  ASC
  ASC_NULLS_FIRST
  ASC_NULLS_LAST
  DESC
  DESC_NULLS_FIRST
  DESC_NULLS_LAST
}

type PrivateMutation {
  id: ID!
}

type PrivateQuery {
  noop: ID!
  id: ID!
}

type PublicMutation {
  id: ID!
}

type PublicQuery {
  me: UserMeType
  regions(filters: RegionFilter, order: RegionOrder, pagination: OffsetPaginationInput): RegionTypeCountList!
  countries(filters: CountryFilter, order: CountryOrder, pagination: OffsetPaginationInput): CountryTypeCountList!
  feeds(filters: FeedFilter, order: FeedOrder, pagination: OffsetPaginationInput): FeedTypeCountList!
  alerts(filters: AlertFilter, order: AlertOrder, pagination: OffsetPaginationInput): AlertTypeCountList!
  region(pk: ID!): RegionType
  country(pk: ID!): CountryType
  feed(pk: ID!): FeedType
  alert(pk: ID!): AlertType
  id: ID!
}

type Query {
  public: PublicQuery!
  private: PrivateQuery!
  enums: AppEnumCollection!
}

input RegionFilter {
  id: IDBaseFilterLookup
  AND: RegionFilter
  OR: RegionFilter
  NOT: RegionFilter
  DISTINCT: Boolean
}

input RegionOrder {
  id: Ordering
}

type RegionType {
  id: ID!
  name: String!
  polygon: String
  centroid: String
}

type RegionTypeCountList {
  limit: Int!
  offset: Int!
  count: Int!
  items: [RegionType!]!
}

type UserMeType {
  id: ID!
  firstName: String
  lastName: String
  displayName: String
  email: String!
  phoneNumber: String
  country: String
  city: String
}
